{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nexport let AppComponent = class AppComponent {\n  constructor() {\n    this.fileType = environment.fileType == null ? '' : environment.fileType;\n    this.myForm = new FormGroup({\n      \"userEmail\": new FormControl(\"\", [Validators.required, Validators.email]),\n      \"userFile\": new FormControl(null, [Validators.required, this.requiredFileType])\n    });\n  }\n  submit(event) {\n    console.log(this.myForm);\n  }\n  requiredFileType(control) {\n    const file = control.value;\n    let pattern = \"[^\\s]+(.*?).(\" + environment.fileType + \")$\";\n    const regex = new RegExp(pattern);\n    if (file) {\n      if (!regex.test(file)) {\n        return {\n          \"userFile\": true\n        };\n      }\n    }\n    ;\n    return null;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","environment","AppComponent","constructor","fileType","myForm","required","email","requiredFileType","submit","event","console","log","control","file","value","pattern","regex","RegExp","test","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Мои документы\\Course .Net\\Test Task for job\\Reenbit\\UIapp\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  myForm : FormGroup;\n    constructor(){\n        this.myForm = new FormGroup({\n          \"userEmail\": new FormControl(\"\", [\n                                Validators.required,\n                                Validators.email\n                            ]),\n          \"userFile\": new FormControl(null, [\n                                Validators.required,\n                                this.requiredFileType])\n        });\n    }\n\n  fileType: string = environment.fileType == null ? '':environment.fileType;\n\n    submit(event:FormGroup){\n        console.log(this.myForm);\n    }\n\n  requiredFileType (control: FormControl): {[s:string]:boolean}|null {\n    const file = control.value;\n    let pattern = \"[^\\s]+(.*?).(\" + environment.fileType + \")$\";\n    const regex = new RegExp(pattern);\n    if ( file ) {\n      if ( !regex.test(file)) {\n        return {\"userFile\": true};\n      }\n    };\n    return null;\n\n  }\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,WAAW,QAAQ,8BAA8B;AAOnD,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAErBC,YAAA;IAYF,KAAAC,QAAQ,GAAWH,WAAW,CAACG,QAAQ,IAAI,IAAI,GAAG,EAAE,GAACH,WAAW,CAACG,QAAQ;IAXnE,IAAI,CAACC,MAAM,GAAG,IAAIN,SAAS,CAAC;MAC1B,WAAW,EAAE,IAAID,WAAW,CAAC,EAAE,EAAE,CACXE,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACO,KAAK,CACnB,CAAC;MACpB,UAAU,EAAE,IAAIT,WAAW,CAAC,IAAI,EAAE,CACZE,UAAU,CAACM,QAAQ,EACnB,IAAI,CAACE,gBAAgB,CAAC;KAC7C,CAAC;EACN;EAIAC,MAAMA,CAACC,KAAe;IAClBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,MAAM,CAAC;EAC5B;EAEFG,gBAAgBA,CAAEK,OAAoB;IACpC,MAAMC,IAAI,GAAGD,OAAO,CAACE,KAAK;IAC1B,IAAIC,OAAO,GAAG,eAAe,GAAGf,WAAW,CAACG,QAAQ,GAAG,IAAI;IAC3D,MAAMa,KAAK,GAAG,IAAIC,MAAM,CAACF,OAAO,CAAC;IACjC,IAAKF,IAAI,EAAG;MACV,IAAK,CAACG,KAAK,CAACE,IAAI,CAACL,IAAI,CAAC,EAAE;QACtB,OAAO;UAAC,UAAU,EAAE;QAAI,CAAC;;;IAE5B;IACD,OAAO,IAAI;EAEb;CACD;AAhCYZ,YAAY,GAAAkB,UAAA,EALxBvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWrB,YAAY,CAgCxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}