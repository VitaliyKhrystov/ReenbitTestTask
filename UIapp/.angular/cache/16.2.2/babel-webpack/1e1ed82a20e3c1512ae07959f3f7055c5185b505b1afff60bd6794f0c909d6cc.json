{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UploadModel } from 'src/Models/UploadModel';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/Services/file.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Please use a valid email address! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" The file format is invalid! Upload file \\\"\", ctx_r1.fileType, \" format.\\\" \");\n  }\n}\nexport class AppComponent {\n  constructor(fileService) {\n    this.fileService = fileService;\n    this.fileType = environment.fileType == null ? '' : environment.fileType;\n    this.myForm = new FormGroup({\n      \"userEmail\": new FormControl(\"\", [Validators.required, Validators.email]),\n      \"userFile\": new FormControl(null, [Validators.required, this.requiredFileType])\n    });\n  }\n  onChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      this.file = file;\n    }\n  }\n  send() {\n    if (this.file && this.myForm.value.userEmail) {\n      const formData = new FormData();\n      formData.append('file', this.file, this.file.name);\n      const uploadData = new UploadModel();\n      uploadData.email = this.myForm.value.userEmail;\n      uploadData.file = this.file;\n      this.fileService.upload(formData).subscribe({\n        next: () => {\n          console.log('file is successfully uploaded');\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n  }\n  requiredFileType(control) {\n    const file = control.value;\n    let pattern = \"[^\\s]+(.*?).(\" + environment.fileType + \")$\";\n    const regex = new RegExp(pattern);\n    if (file) {\n      if (!regex.test(file)) {\n        return {\n          \"userFile\": true\n        };\n      }\n    }\n    ;\n    return null;\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FileService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 13,\n  vars: 4,\n  consts: [[1, \"container\", \"w-25\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mt-4\"], [\"name\", \"email\", \"formControlName\", \"userEmail\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"file\", \"formControlName\", \"userFile\", 1, \"file-upload\", 3, \"change\"], [1, \"form-group\"], [1, \"btn\", \"btn-info\", \"mt-4\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.send();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\");\n      i0.ɵɵtext(4, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵtemplate(6, AppComponent_div_6_Template, 2, 0, \"div\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"input\", 5);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_8_listener($event) {\n        return ctx.onChange($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(9, AppComponent_div_9_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"button\", 7);\n      i0.ɵɵtext(12, \" Send \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls[\"userEmail\"].invalid && ctx.myForm.controls[\"userEmail\"].touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls[\"userFile\"].invalid && ctx.myForm.controls[\"userFile\"].touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.myForm.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"input.ng-touched.ng-invalid[_ngcontent-%COMP%] {\\n  border: solid red 2px;\\n}\\n\\ninput.ng-touched.ng-valid[_ngcontent-%COMP%] {\\n  border: solid green 2px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dC5uZy10b3VjaGVkLm5nLWludmFsaWQge1xyXG4gIGJvcmRlcjogc29saWQgcmVkIDJweDtcclxufVxyXG5cclxuaW5wdXQubmctdG91Y2hlZC5uZy12YWxpZCB7XHJcbiAgYm9yZGVyOiBzb2xpZCBncmVlbiAycHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","UploadModel","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","fileType","AppComponent","constructor","fileService","myForm","required","email","requiredFileType","onChange","event","file","target","files","send","value","userEmail","formData","FormData","append","name","uploadData","upload","subscribe","next","console","log","error","err","control","pattern","regex","RegExp","test","ɵɵdirectiveInject","i1","FileService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵlistener","AppComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵtemplate","AppComponent_div_6_Template","AppComponent_Template_input_change_8_listener","$event","AppComponent_div_9_Template","ɵɵproperty","controls","invalid","touched"],"sources":["D:\\Мои документы\\Course .Net\\Test Task for job\\Reenbit\\UIapp\\src\\app\\app.component.ts","D:\\Мои документы\\Course .Net\\Test Task for job\\Reenbit\\UIapp\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UploadModel } from 'src/Models/UploadModel';\nimport { FileService } from 'src/Services/file.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  myForm: FormGroup;\n  fileType: string = environment.fileType == null ? '' : environment.fileType;\n  file?: File;\n\n    constructor(private fileService: FileService){\n        this.myForm = new FormGroup({\n          \"userEmail\": new FormControl(\"\", [\n                                Validators.required,\n                                Validators.email\n                            ]),\n          \"userFile\": new FormControl(null, [\n                                Validators.required,\n                                this.requiredFileType])\n        });\n    }\n\n\n  onChange(event:any) {\n    const file: File = event.target.files[0];\n    if (file) {\n      this.file = file;\n    }\n  }\n\n  send(){\n    if (this.file && this.myForm.value.userEmail) {\n      const formData = new FormData();\n      formData.append('file', this.file, this.file.name);\n\n      const uploadData = new UploadModel();\n      uploadData.email = this.myForm.value.userEmail;\n      uploadData.file = this.file;\n\n      this.fileService.upload(formData).subscribe({\n        next: () => {\n          console.log('file is successfully uploaded');\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n  }\n\n  requiredFileType (control: FormControl): {[s:string]:boolean}|null {\n    const file = control.value;\n    let pattern = \"[^\\s]+(.*?).(\" + environment.fileType + \")$\";\n    const regex = new RegExp(pattern);\n    if ( file ) {\n      if ( !regex.test(file)) {\n        return {\"userFile\": true};\n      }\n    };\n    return null;\n\n  }\n}\n\n","<div class=\"container w-25\">\n<form [formGroup]=\"myForm\" novalidate (ngSubmit)=\"send()\">\n    <div class=\"form-group mt-4\">\n        <label>Email</label>\n        <input class=\"form-control\" name=\"email\" formControlName=\"userEmail\" />\n\n        <div class=\"alert alert-danger\"\n            *ngIf=\"myForm.controls['userEmail'].invalid && myForm.controls['userEmail'].touched\">\n            Please use a valid email address!\n        </div>\n    </div>\n    <div class=\"form-group mt-4\">\n       <input type=\"file\" class=\"file-upload\" formControlName=\"userFile\" (change)=\"onChange($event)\">\n    </div>\n      <div class=\"alert alert-danger\"\n            *ngIf=\"myForm.controls['userFile'].invalid && myForm.controls['userFile'].touched\">\n            The file format is invalid! Upload file \"{{fileType}} format.\"\n        </div>\n    <div class=\"form-group\">\n        <button class=\"btn btn-info mt-4\" [disabled]=\"myForm.invalid\">\n            Send\n        </button>\n    </div>\n  </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}