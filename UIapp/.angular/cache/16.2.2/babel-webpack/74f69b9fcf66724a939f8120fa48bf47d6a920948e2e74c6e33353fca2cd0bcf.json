{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/Services/file.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Please use a valid email address! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" The file format is invalid! Upload file \\\"\", ctx_r1.fileType, \" format.\\\" \");\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  var _class;\n  class AppComponent {\n    constructor(fileService) {\n      this.fileService = fileService;\n      this.fileType = environment.fileType == null ? '' : environment.fileType;\n      this.myForm = new FormGroup({\n        \"userEmail\": new FormControl(\"\", [Validators.required, Validators.email]),\n        \"userFile\": new FormControl(null, [Validators.required, this.requiredFileType])\n      });\n    }\n    onChange(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.file = file;\n      }\n    }\n    send() {\n      if (this.file && this.myForm.value.userEmail) {\n        const formData = new FormData();\n        formData.append('email', this.myForm.value.userEmail);\n        formData.append('file', this.file, this.file.name);\n        this.fileService.upload(formData).subscribe({\n          next: status => {\n            console.log(`Status: ${status}. File is successfully uploaded!`);\n          },\n          error: err => {\n            console.log(err);\n          }\n        });\n      }\n    }\n    requiredFileType(control) {\n      const file = control.value;\n      let pattern = \"[^\\s]+(.*?).(\" + environment.fileType + \")$\";\n      const regex = new RegExp(pattern);\n      if (file) {\n        if (!regex.test(file)) {\n          return {\n            \"userFile\": true\n          };\n        }\n      }\n      ;\n      return null;\n    }\n  }\n  _class = AppComponent;\n  _class.ɵfac = function AppComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.FileService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-root\"]],\n    decls: 13,\n    vars: 4,\n    consts: [[1, \"container\", \"w-25\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mt-4\"], [\"name\", \"email\", \"formControlName\", \"userEmail\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"file\", \"formControlName\", \"userFile\", 1, \"file-upload\", 3, \"change\"], [1, \"form-group\"], [1, \"btn\", \"btn-info\", \"mt-4\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.send();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\");\n        i0.ɵɵtext(4, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵtemplate(6, AppComponent_div_6_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"input\", 5);\n        i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_8_listener($event) {\n          return ctx.onChange($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, AppComponent_div_9_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"button\", 7);\n        i0.ɵɵtext(12, \" Send \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls[\"userEmail\"].invalid && ctx.myForm.controls[\"userEmail\"].touched);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls[\"userFile\"].invalid && ctx.myForm.controls[\"userFile\"].touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.myForm.invalid);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"input.ng-touched.ng-invalid[_ngcontent-%COMP%]{border:solid red 2px}input.ng-touched.ng-valid[_ngcontent-%COMP%]{border:solid green 2px}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}